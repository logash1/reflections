What happens when you initialize a repository? Why do you need to do it?

When you initialize a repository git greates a hidden .git file that stores metadata
for the repository. You need to do it so that git can keep track of different versions
of your project and so that you can create commits

How is the staging area different from the working directory and the repository? What 
value do you think it offers?

The staging area is sort of a pre-commit. It allows you to set up what files you would like to
include in the commit before you "commit" to it. 

How can you use the staging area to make sure you have one commit per logical change?
You can add changes to the staging area seperately. If you change one thing in one file
and something else in another you add the first file to the staging area and only commit that
one, then add the other and commit it seperately.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

Branches would be helpful when you want to add a new feature that will not necesarily be in the main versions
of your program but you want to test it out. If you want to add an easy mode to a game perhaps
or maybe add a different type of asteroid.

How do the diagrams help you visualize the branch structure?

diagrams help because they make it easy to visualize the branch structure
If you look closely, it's very easy to see the parent of each commit and 
the places where new branches begin 

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

it merged the two branches together. the reason it is represted the way it is in the diagram is because 
once you merge them, all commits created for the merged branch are now part of the new branch.